<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<springProperty scope="context" name="log.dir" source="app.log-dir" defaultValue="/opt/logs" />
	<springProperty scope="context" name="log.filename" source="app.log-filename" defaultValue="undefined" />
	<springProperty scope="context" name="log.maxSize" source="app.log-max-size" defaultValue="100MB" />
	<springProperty scope="context" name="log.pattern" source="app.log-pattern"
		defaultValue="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger{0}:%m%n" />

	<contextName>${app.log-filename}</contextName>

	<!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,,,, -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<!--格式化输出：%d:表示日期 %thread:表示线程名 %-5level:级别从左显示5个字符宽度 %msg:日志消息 %n:是换行符 -->
			<pattern>${log.pattern}</pattern>
			<charset>UTF8</charset>
		</encoder>
	</appender>

	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${log.pattern}</pattern>
			<charset>UTF8</charset>
		</encoder>
	</appender>

	<!-- 日志记录器，日期滚动记录 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 正在记录的日志文件的路径及文件名 -->
		<file>${log.dir}/${log.filename}.log</file>
		<!-- 日志记录器的滚动策略，按日期，按大小记录 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，
				  从而将当前日志文件或归档日志文件置不同的目录。而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
			<fileNamePattern>${log.dir}/${log.filename}-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始， 命名日志文件，例如log-error-2013-12-21.0.log -->
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${log.maxSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- 追加方式记录日志 -->
		<append>true</append>
		<!-- 日志文件的格式 -->
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${log.pattern}</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>

	<!-- 异步输出 -->
	<appender name="AsyncOut" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>8</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="FILE" />
	</appender>

	<logger name="com.minlia" level="DEBUG" />
	<logger name="org.springframework.data.mybatis" level="DEBUG" />
	<logger name="org.springframework.aop.aspectj" level="ERROR" />

	<logger name="javax.activation" level="WARN" />
	<logger name="javax.mail" level="WARN" />
	<logger name="javax.xml.bind" level="WARN" />
	<logger name="ch.qos.logback" level="INFO" />
	<logger name="com.codahale.metrics" level="WARN" />
	<logger name="com.ryantenney" level="WARN" />
	<logger name="com.sun" level="WARN" />
	<logger name="com.zaxxer" level="WARN" />
	<logger name="io.undertow" level="WARN" />
	<logger name="net.sf.ehcache" level="WARN" />
	<logger name="org.apache" level="WARN" />
	<logger name="org.apache.catalina.startup.DigesterFactory" level="OFF" />
	<logger name="org.bson" level="WARN" />
	<logger name="org.hibernate.validator" level="WARN" />
	<logger name="org.hibernate" level="WARN" />
	<logger name="org.hibernate.ejb.HibernatePersistence" level="OFF" />
	<logger name="org.springframework.web" level="INFO" />
	<logger name="org.springframework.security" level="WARN" />
	<logger name="org.springframework.cache" level="WARN" />
	<logger name="org.thymeleaf" level="WARN" />
	<logger name="org.xnio" level="WARN" />
	<logger name="springfox" level="WARN" />
	<logger name="sun.rmi" level="WARN" />
	<logger name="liquibase" level="WARN" />
	<logger name="sun.rmi.transport" level="WARN" />

	<logger name="jdbc.connection" level="ERROR" />
	<logger name="jdbc.resultset" level="ERROR" />
	<logger name="jdbc.resultsettable" level="INFO" />
	<logger name="jdbc.audit" level="ERROR" />
	<logger name="jdbc.sqltiming" level="ERROR" />
	<logger name="jdbc.sqlonly" level="INFO" />

	<springProfile name="prod">
		<root level="INFO">
			<appender-ref ref="FILE" />
		</root>
	</springProfile>

	<springProfile name="dev">
		<root level="DEBUG">
			<appender-ref ref="FILE" />
			<appender-ref ref="CONSOLE" />
		</root>
	</springProfile>

</configuration>